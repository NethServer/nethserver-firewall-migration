#!/usr/bin/python

#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import os
import sys
import glob
import subprocess
import simplejson
import fileinput

def is_firewall_installed():
    return os.path.exists('/usr/share/cockpit/nethserver/applications/nethserver-firewall-base.json')

def export():
    process = subprocess.Popen(["/usr/sbin/firewall-export"], stdout=subprocess.PIPE)
    output, error = process.communicate()
    return process.returncode == 0 and os.path.exists('/var/lib/nethserver/firewall-migration/export.tar.gz')

def list_skipped():
    ret = dict()
    for f in  glob.glob('/var/lib/nethserver/firewall-migration/skipped/*'):
        try:
            with open(f, 'r') as fp:
                json = simplejson.load(fp)
        except:
            continue
        if json:
            name = os.path.basename(f)[:-len('.json')]
            ret[name]=json
   
    return ret

def list_done():
    ret = list()
    for f in  glob.glob('/var/lib/nethserver/firewall-migration/done/*'):
       ret.append(os.path.basename(f))
    return ret

try:
    line = fileinput.input()[0].rstrip()
    input_json = simplejson.loads(line)
    action = input_json["action"]

    if action == 'status':
        output = simplejson.dumps({'firewallInstalled': is_firewall_installed()})
        print (output)
    if action == 'export':
        exported = export()
        output = simplejson.dumps({'exported': exported, 'skipped': list_skipped(), 'done': list_done()})
        print (output)
except Exception, e:
    print simplejson.dumps({ 'error': "%s" % e })
    sys.exit(1)
