#!/usr/bin/perl

#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use warnings;
use JSON;
use esmith::ConfigDB;
use esmith::HostsDB;
use esmith::NetworksDB;

sub slurp {
    my $file = shift;
    my $data;
    open my $fh, '<', $file or die;
    local $/ = undef;
    $data = <$fh>;
    close $fh;

    # trim
    $data =~ s/^\s+|\s+$//g;

    return $data;
}

my $cdb = esmith::ConfigDB->open_ro();
my $hdb = esmith::HostsDB->open_ro();
my $ndb = esmith::NetworksDB->open_ro();

my %general;
my @hosts;
my @forwardings;
my @addresses;

$general{'hostname'} = $cdb->get_value('SystemName');
$general{'domain'} = $cdb->get_value('DomainName');
$general{'cachesize'} = $cdb->get_prop('dnsmasq', 'CacheSize');
$general{'dhcp_boot'} = $cdb->get_prop('dnsmasq', 'dhcp-boot');
$general{'enable_tftp'} = $cdb->get_prop('dnsmasq', 'tftp-status') eq 'enabled' ? 1 : 0;
$general{'allservers'} = 1;

foreach (split(/,/, $cdb->get_prop('dnsmasq', 'DomainRedirection') || '')) {
    my ($domain, $address) = split(/:/, $_);
    push(@forwardings, "/$domain/$address");
}

push(@forwardings, split(/,/, $cdb->get_prop('dns', 'NameServers') || ''));

# Collect DNS hosts and wildcard domains
foreach ($hdb->get_all_by_prop('type'=>'remote')) {
    my $wildcard =  $_->prop('WildcardMode') || 'disabled';
    if ($wildcard eq 'enabled') {
        push(@addresses, {
                'name' => $_->key,
                'ip' => $_->prop('IpAddress'),
                'description' => $_->prop('Description')
            });
    } else {
        push(@hosts, {
                'name' => $_->key,
                'ip' => $_->prop('IpAddress'),
                'description' => $_->prop('Description')
            });
    }
}

foreach my $h ($hdb->get_all_by_prop('type'=>'self')) {
    foreach ($ndb->green()) {
        push(@hosts, {
            'name' => $h->key,
            'ip' => $_->prop('ipaddr'),
        });
    }
}

print(encode_json({
            'general' => \%general,
            'forwardings' => \@forwardings,
            'hosts' => \@hosts,
            'addresses' => \@addresses
        }));
