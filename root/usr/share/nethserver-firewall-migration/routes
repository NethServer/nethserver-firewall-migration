#!/usr/bin/perl

#
# Copyright (C) 2022 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use warnings;
use JSON;
use esmith::ConfigDB;
use esmith::NetworksDB;

sub slurp {
    my $file = shift;
    my $data;
    open my $fh, '<', $file or die;
    local $/ = undef;
    $data = <$fh>;
    close $fh;

    # trim
    $data =~ s/^\s+|\s+$//g;

    return $data;
}

my $rdb = esmith::ConfigDB->open_ro('routes');
my $ndb = esmith::NetworksDB->open_ro();

my @routes;
my %devices;

for my $i ($ndb->get_all_by_prop('type' => 'ethernet')) {
    my $addr_file = '/sys/class/net/'.$i->key.'/address';
    if (-e $addr_file) {
        $devices{$i->key} = slurp($addr_file);
    }
}


for my $r ($rdb->get_all_by_prop('type' => 'static')) {
    my $interface = $r->prop('Device') || '';
    my $type = $ndb->get_prop($interface, 'type') || '';
    my %route = (
        'target' => $r->key,
        'gateway' =>  $r->prop('Router'),
        'metric' =>  $r->prop('Metric') || 0,
        'ns_description' => $r->prop('Description') || '',
        'type' => $type
    );

    if ($type eq 'ethernet') {
        my $hwaddr = $devices{$interface};
        next if (!$hwaddr);
        $route{'hwaddr'} = $hwaddr;
    } elsif ($type eq 'vlan') {
        my ($device, $vid) = split(/\./,$interface);
        my $hwaddr = $devices{$device};
        next if (!$hwaddr);
        $route{'vid'} = $vid;
        $route{'hwaddr'} = $hwaddr;
    } else {
        $route{'device'} = $interface;
    }

    push(@routes, \%route);
}

print(encode_json({'routes' => \@routes}));
